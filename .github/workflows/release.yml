name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
        components: rust-src, llvm-tools-preview
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-x86 xorriso
        cargo install bootimage
    
    - name: Build release
      run: |
        cargo build --release
        cargo bootimage
    
    - name: Create ISO
      run: |
        mkdir -p iso/boot/grub
        cp target/x86_64-unknown-none/release/bootimage-orbita.bin iso/boot/kernel.bin
        
        cat > iso/boot/grub/grub.cfg << EOF
        set timeout=0
        set default=0
        
        menuentry "Orbita OS" {
            multiboot2 /boot/kernel.bin
            boot
        }
        EOF
        
        grub-mkrescue -o orbita-os.iso iso/
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Orbita OS ${{ github.ref }}
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./orbita-os.iso
        asset_name: orbita-os-${{ github.ref }}.iso
        asset_content_type: application/octet-stream